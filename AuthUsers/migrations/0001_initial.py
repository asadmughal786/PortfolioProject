# Generated by Django 4.2.1 on 2023-05-03 19:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.CharField(max_length=30, null=True)),
                ('country', models.CharField(max_length=30, null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('Name_of_degree', models.CharField(max_length=30, null=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('education_obj', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='professional_experiance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.CharField(max_length=30, null=True)),
                ('country', models.CharField(max_length=30, null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('Company_name', models.CharField(max_length=30, null=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('prof_exp_obj', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_age', models.IntegerField(null=True)),
                ('user_city', models.CharField(max_length=30, null=True)),
                ('user_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='PK')),
                ('user_address', models.TextField(null=True)),
                ('user_freelancer', models.BooleanField(blank=True)),
                ('user_bio', models.TextField(max_length=255, null=True)),
                ('user_profile_picture', models.ImageField(default=None, upload_to='image/%y')),
                ('user_website', models.URLField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(max_length=30, null=True)),
                ('grip_value', models.SmallIntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField()),
                ('user_skills', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User_id')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('Skill_obj', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='professionl_achivements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achivements_name', models.CharField(max_length=30)),
                ('certification_link', models.URLField(null=True)),
                ('certification_start_date', models.DateField(null=True)),
                ('certification_end_date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('p_achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuthUsers.professional_experiance', verbose_name='p_exp_id')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('p_achievements_obj', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='professional_experiance',
            name='user_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User_id'),
        ),
        migrations.CreateModel(
            name='Educative_achivements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achivements_name', models.CharField(max_length=30)),
                ('certification_link', models.URLField(null=True)),
                ('certification_start_date', models.DateField(null=True)),
                ('certification_end_date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuthUsers.education', verbose_name='education_id')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('edu_achivements_obj', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='education',
            name='user_education',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='USER_ID'),
        ),
        migrations.CreateModel(
            name='Company_skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(max_length=30, null=True)),
                ('grip_value', models.SmallIntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField()),
                ('p_skills', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AuthUsers.professional_experiance', verbose_name='Prof_exp_id')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('prof_skill_obj', django.db.models.manager.Manager()),
            ],
        ),
    ]
